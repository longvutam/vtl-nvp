// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Radzen.Blazor.Rendering
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "D:\c#\radzen-blazor\Radzen.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 1 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\MonthView.razor"
using Radzen;

#line default
#line hidden
#line 2 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\MonthView.razor"
using Radzen.Blazor;

#line default
#line hidden
#line 3 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\MonthView.razor"
using Radzen.Blazor.Rendering;

#line default
#line hidden
    public partial class MonthView : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 88 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\MonthView.razor"
       
    [Parameter]
    public DateTime StartDate { get; set; }

    [Parameter]
    public DateTime EndDate { get; set; }

    [Parameter]
    public int MaxAppointmentsInSlot { get; set; }

    [Parameter]
    public string MoreText { get; set; }

    [CascadingParameter]
    public IScheduler Scheduler { get; set; }

    [Parameter]
    public IEnumerable<AppointmentData> Appointments { get; set; }

    IDictionary<string, object> Attributes(DateTime start)
    {
        var attributes = Scheduler.GetSlotAttributes(start, start.AddDays(1));
        attributes["class"] = ClassList.Create("rz-slot").Add(attributes).ToString();
        return attributes;
    }
    
    async Task OnSlotClick(DateTime date)
    {
        await Scheduler.SelectSlot(date, date.AddDays(1));
    }

    double DetermineTop(HashSet<double> existingTops)
    {
        var top = 1.5;

        while (existingTops.Contains(top))
        {
            top += 1.5;
        }

        return top;
    }

    HashSet<double> ExistingTops(IDictionary<AppointmentData, double> tops, IEnumerable<AppointmentData> appointments)
    {
        var existingTops = new HashSet<double>();

        foreach (var appointment in appointments)
        {
            if (tops.TryGetValue(appointment, out var existingTop))
            {
                existingTops.Add(existingTop);
            }
        }

        return existingTops;
    }

    async Task OnAppointmentClick(AppointmentData data)
    {
        await Scheduler.SelectAppointment(data);
    }

    private AppointmentData[] AppointmentsInSlot(DateTime start, DateTime end)
    {
        if (Appointments == null)
        {
            return Array.Empty<AppointmentData>();
        }

        return Appointments.Where(item => Scheduler.IsAppointmentInRange(item, start, end)).OrderBy(item => item.Start).ThenByDescending(item => item.End).ToArray();
    }

    async Task OnListClick(DateTime date, IEnumerable<AppointmentData> appointments)
    {
     await DialogService.OpenAsync(date.ToShortDateString(), ds =>
        

#line default
#line hidden
        (__builder2) => {
            __builder2.OpenElement(0, "div");
            __builder2.AddAttribute(1, "class", "rz-event-list");
            __builder2.AddMarkupContent(2, "\n        ");
            __builder2.OpenElement(3, "CascadingValue");
            __builder2.AddAttribute(4, "Value", 
#line 165 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\MonthView.razor"
                               Scheduler

#line default
#line hidden
            );
            __builder2.AddMarkupContent(5, "\n");
#line 166 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\MonthView.razor"
         foreach(var item in appointments)
        {

#line default
#line hidden
            __builder2.AddContent(6, "            ");
            __builder2.OpenElement(7, "Appointment");
            __builder2.AddAttribute(8, "Data", 
#line 168 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\MonthView.razor"
                               item

#line default
#line hidden
            );
            __builder2.AddAttribute(9, "Click", "OnListEventClick");
            __builder2.CloseElement();
            __builder2.AddMarkupContent(10, "\n");
#line 169 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\MonthView.razor"
        }

#line default
#line hidden
            __builder2.AddContent(11, "        ");
            __builder2.CloseElement();
            __builder2.AddMarkupContent(12, "\n        ");
            __builder2.CloseElement();
        }
#line 171 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\MonthView.razor"
              );
    }

    async Task OnListEventClick(AppointmentData data)
    {
        DialogService.Close();

        await OnAppointmentClick(data);
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private DialogService DialogService { get; set; }
    }
}
#pragma warning restore 1591
