#pragma checksum "D:\c#\blazor\vtl-nvp\Radzen.Blazor\RadzenDataGridCell.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6cc40942bde3c1d65c08540781f2ad06442c9b20"
// <auto-generated/>
#pragma warning disable 1591
namespace Radzen.Blazor
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "D:\c#\blazor\vtl-nvp\Radzen.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
    public partial class RadzenDataGridCell<TItem> : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "td");
            __builder.AddMultipleAttributes(1, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, object>>>(
#line 2 "D:\c#\blazor\vtl-nvp\Radzen.Blazor\RadzenDataGridCell.razor"
                  Attributes

#line default
#line hidden
            ));
            __builder.AddAttribute(2, "style", 
#line 2 "D:\c#\blazor\vtl-nvp\Radzen.Blazor\RadzenDataGridCell.razor"
                                      GetStyle()

#line default
#line hidden
            );
            __builder.AddAttribute(3, "class", 
#line 2 "D:\c#\blazor\vtl-nvp\Radzen.Blazor\RadzenDataGridCell.razor"
                                                          GetCssClass()

#line default
#line hidden
            );
            __builder.AddAttribute(4, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#line 2 "D:\c#\blazor\vtl-nvp\Radzen.Blazor\RadzenDataGridCell.razor"
                                                                                    OnClick

#line default
#line hidden
            ));
            __builder.AddAttribute(5, "ondblclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#line 2 "D:\c#\blazor\vtl-nvp\Radzen.Blazor\RadzenDataGridCell.razor"
                                                                                                           OnDblClick

#line default
#line hidden
            ));
            __builder.AddAttribute(6, "oncontextmenu", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#line 2 "D:\c#\blazor\vtl-nvp\Radzen.Blazor\RadzenDataGridCell.razor"
                                                                                                                                        OnContextMenu

#line default
#line hidden
            ));
            __builder.AddEventPreventDefaultAttribute(7, "oncontextmenu", 
#line 2 "D:\c#\blazor\vtl-nvp\Radzen.Blazor\RadzenDataGridCell.razor"
                                                                                                                                                                                       Grid.CellContextMenu.HasDelegate

#line default
#line hidden
            );
            __builder.AddMarkupContent(8, "\r\n    ");
            __Blazor.Radzen.Blazor.RadzenDataGridCell.TypeInference.CreateCascadingValue_0(__builder, 9, 10, 
#line 3 "D:\c#\blazor\vtl-nvp\Radzen.Blazor\RadzenDataGridCell.razor"
                          this

#line default
#line hidden
            , 11, (__builder2) => {
                __builder2.AddMarkupContent(12, "\r\n        ");
                __builder2.AddContent(13, 
#line 4 "D:\c#\blazor\vtl-nvp\Radzen.Blazor\RadzenDataGridCell.razor"
         ChildContent

#line default
#line hidden
                );
                __builder2.AddMarkupContent(14, "\r\n    ");
            }
            );
            __builder.AddMarkupContent(15, "\r\n");
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#line 7 "D:\c#\blazor\vtl-nvp\Radzen.Blazor\RadzenDataGridCell.razor"
       
    [Parameter(CaptureUnmatchedValues = true)]
    public IReadOnlyDictionary<string, object> Attributes { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string CssClass { get; set; }

    [Parameter]
    public string Style { get; set; }

    [Parameter]
    public TItem Item { get; set; }

    [Parameter]
    public RadzenDataGridColumn<TItem> Column { get; set; }

    [Parameter]
    public RadzenDataGrid<TItem> Grid { get; set; }

    async Task OnContextMenu(MouseEventArgs args)
    {
        if (Grid != null)
        {
#if NET5
            await Grid.OnCellContextMenu(new DataGridCellMouseEventArgs<TItem>
            {
                Data = Item,
                AltKey = args.AltKey,
                Button = args.Button,
                Buttons = args.Buttons,
                ClientX = args.ClientX,
                ClientY = args.ClientY,
                CtrlKey = args.CtrlKey,
                Detail = args.Detail,
                MetaKey = args.MetaKey,
                OffsetX = args.OffsetX,
                OffsetY = args.OffsetY,
                ScreenX = args.ScreenX,
                ScreenY = args.ScreenY,
                ShiftKey = args.ShiftKey,
                Type = args.Type,
                Column = Column
            });
#else
            await Grid.OnCellContextMenu(new DataGridCellMouseEventArgs<TItem>
            {
                Data = Item,
                AltKey = args.AltKey,
                Button = args.Button,
                Buttons = args.Buttons,
                ClientX = args.ClientX,
                ClientY = args.ClientY,
                CtrlKey = args.CtrlKey,
                Detail = args.Detail,
                MetaKey = args.MetaKey,
                ScreenX = args.ScreenX,
                ScreenY = args.ScreenY,
                ShiftKey = args.ShiftKey,
                Type = args.Type,
                Column = Column
            });
#endif
        }
    }


    async Task OnClick(MouseEventArgs args)
    {
        if (Grid != null)
        {
#if NET5
            await Grid.OnRowClick(new DataGridRowMouseEventArgs<TItem>
            {
                Data = Item,
                AltKey = args.AltKey,
                Button = args.Button,
                Buttons = args.Buttons,
                ClientX = args.ClientX,
                ClientY = args.ClientY,
                CtrlKey = args.CtrlKey,
                Detail = args.Detail,
                MetaKey = args.MetaKey,
                OffsetX = args.OffsetX,
                OffsetY = args.OffsetY,
                ScreenX = args.ScreenX,
                ScreenY = args.ScreenY,
                ShiftKey = args.ShiftKey,
                Type = args.Type
            });
#else
            await Grid.OnRowClick(new DataGridRowMouseEventArgs<TItem>
            {
                Data = Item,
                AltKey = args.AltKey,
                Button = args.Button,
                Buttons = args.Buttons,
                ClientX = args.ClientX,
                ClientY = args.ClientY,
                CtrlKey = args.CtrlKey,
                Detail = args.Detail,
                MetaKey = args.MetaKey,
                ScreenX = args.ScreenX,
                ScreenY = args.ScreenY,
                ShiftKey = args.ShiftKey,
                Type = args.Type
            });
#endif
        }
    }

    async Task OnDblClick(MouseEventArgs args)
    {
        if (Grid != null)
        {
#if NET5
            await Grid.OnRowDblClick(new DataGridRowMouseEventArgs<TItem>
            {
                Data = Item,
                AltKey = args.AltKey,
                Button = args.Button,
                Buttons = args.Buttons,
                ClientX = args.ClientX,
                ClientY = args.ClientY,
                CtrlKey = args.CtrlKey,
                Detail = args.Detail,
                MetaKey = args.MetaKey,
                OffsetX = args.OffsetX,
                OffsetY = args.OffsetY,
                ScreenX = args.ScreenX,
                ScreenY = args.ScreenY,
                ShiftKey = args.ShiftKey,
                Type = args.Type
            });
#else
            await Grid.OnRowDblClick(new DataGridRowMouseEventArgs<TItem>
            {
                Data = Item,
                AltKey = args.AltKey,
                Button = args.Button,
                Buttons = args.Buttons,
                ClientX = args.ClientX,
                ClientY = args.ClientY,
                CtrlKey = args.CtrlKey,
                Detail = args.Detail,
                MetaKey = args.MetaKey,
                ScreenX = args.ScreenX,
                ScreenY = args.ScreenY,
                ShiftKey = args.ShiftKey,
                Type = args.Type
            });
#endif
        }
    }

    string GetCssClass()
    {
        if (Attributes != null && Attributes.TryGetValue("class", out var @class) && !string.IsNullOrEmpty(Convert.ToString(@class)))
        {
            return $"{CssClass} {@class}".Trim();
        }

        return String.IsNullOrWhiteSpace(CssClass) ? null : CssClass;
    }

    string GetStyle()
    {
        if (Attributes != null && Attributes.TryGetValue("style", out var style) == true && !string.IsNullOrEmpty(Convert.ToString(style)))
        {
            return String.IsNullOrEmpty(Style) ? $"{style}" : $"{Style.TrimEnd(';')};{style}";
        }

        return Style;
    }

#line default
#line hidden
    }
}
namespace __Blazor.Radzen.Blazor.RadzenDataGridCell
{
    #line hidden
    internal static class TypeInference
    {
        public static void CreateCascadingValue_0<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, TValue __arg0, int __seq1, global::Microsoft.AspNetCore.Components.RenderFragment __arg1)
        {
        __builder.OpenComponent<global::Microsoft.AspNetCore.Components.CascadingValue<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Value", __arg0);
        __builder.AddAttribute(__seq1, "ChildContent", __arg1);
        __builder.CloseComponent();
        }
    }
}
#pragma warning restore 1591
