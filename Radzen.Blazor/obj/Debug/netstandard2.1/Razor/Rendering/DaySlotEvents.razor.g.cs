#pragma checksum "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "10ef310cd2524261f7156ceb052be9f9ae8fd989"
// <auto-generated/>
#pragma warning disable 1591
namespace Radzen.Blazor.Rendering
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "D:\c#\radzen-blazor\Radzen.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 1 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
using Radzen.Blazor;

#line default
#line hidden
    public partial class DaySlotEvents : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "div");
            __builder.AddAttribute(1, "class", "rz-events");
            __builder.AddMarkupContent(2, "\n");
#line 4 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
  
    var eventGroups = AppointmentGroups(); 
    var lefts = new Dictionary<AppointmentData, double>();

#line default
#line hidden
#line 8 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
 for (var date = StartDate; date < EndDate; date = date.AddMinutes(30))
{
    var start = date;
    var end = start.AddMinutes(30);

    var appointments = AppointmentsInSlot(start, end);
    var existingLefts = ExistingLefts(lefts, appointments);

    

#line default
#line hidden
#line 16 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
     foreach (var item in appointments)
    {
        var width = 90.0 / appointments.Max(data => eventGroups[Appointments.IndexOf(data)]);

        if (!lefts.TryGetValue(item, out var left))
        {
            left = DetermineLeft(existingLefts, width);
            lefts.Add(item, left);
            existingLefts.Add(left);
        }

        var eventStart = item.Start < StartDate ? StartDate : item.Start;
        var eventEnd = item.End > EndDate ? EndDate : item.End;
        var length = eventStart.Subtract(StartDate).TotalMinutes / 30;
        var top = 1.5 * length;
        var height = Math.Max(1.5, 1.5 * eventEnd.Subtract(eventStart).TotalHours * 2);

        

#line default
#line hidden
#line 33 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
         if (item.Start >= start && item.Start <= end)
        {

#line default
#line hidden
            __builder.AddContent(3, "            ");
            __builder.OpenComponent<Radzen.Blazor.Rendering.Appointment>(4);
            __builder.AddAttribute(5, "Data", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Radzen.Blazor.AppointmentData>(
#line 35 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
                               item

#line default
#line hidden
            ));
            __builder.AddAttribute(6, "Top", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double?>(
#line 35 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
                                         top

#line default
#line hidden
            ));
            __builder.AddAttribute(7, "Left", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double?>(
#line 35 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
                                                   left

#line default
#line hidden
            ));
            __builder.AddAttribute(8, "Width", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double?>(
#line 35 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
                                                               width

#line default
#line hidden
            ));
            __builder.AddAttribute(9, "Height", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double?>(
#line 35 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
                                                                             height

#line default
#line hidden
            ));
            __builder.AddAttribute(10, "Click", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.AppointmentData>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Radzen.Blazor.AppointmentData>(this, 
#line 35 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
                                                                                           OnAppointmentSelect

#line default
#line hidden
            )));
            __builder.CloseComponent();
            __builder.AddMarkupContent(11, "\n");
#line 36 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
        } 
        else if (date == StartDate)
        {

#line default
#line hidden
            __builder.AddContent(12, "            ");
            __builder.OpenComponent<Radzen.Blazor.Rendering.Appointment>(13);
            __builder.AddAttribute(14, "Data", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Radzen.Blazor.AppointmentData>(
#line 39 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
                               item

#line default
#line hidden
            ));
            __builder.AddAttribute(15, "Top", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double?>(
#line 39 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
                                         top

#line default
#line hidden
            ));
            __builder.AddAttribute(16, "Left", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double?>(
#line 39 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
                                                   left

#line default
#line hidden
            ));
            __builder.AddAttribute(17, "Width", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double?>(
#line 39 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
                                                               width

#line default
#line hidden
            ));
            __builder.AddAttribute(18, "Height", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double?>(
#line 39 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
                                                                             height

#line default
#line hidden
            ));
            __builder.AddAttribute(19, "Click", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.AppointmentData>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Radzen.Blazor.AppointmentData>(this, 
#line 39 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
                                                                                           OnAppointmentSelect

#line default
#line hidden
            )));
            __builder.CloseComponent();
            __builder.AddMarkupContent(20, "\n");
#line 40 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
        }

#line default
#line hidden
#line 40 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
         
    }

#line default
#line hidden
#line 41 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
     
}

#line default
#line hidden
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#line 45 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\DaySlotEvents.razor"
       
    [CascadingParameter]
    public IScheduler Scheduler { get; set; }

    [Parameter]
    public DateTime StartDate { get; set; }

    [Parameter]
    public DateTime EndDate { get; set; }

    [Parameter]
    public IList<AppointmentData> Appointments { get; set; }

    async Task OnAppointmentSelect(AppointmentData data)
    {
        await Scheduler.SelectAppointment(data);
    }

    private AppointmentData[] AppointmentsInSlot(DateTime start, DateTime end)
    {
        if (Appointments == null)
        {
            return Array.Empty<AppointmentData>();
        }

        return Appointments.Where(item => Scheduler.IsAppointmentInRange(item, start, end)).OrderBy(item => item.Start).ThenByDescending(item => item.End).ToArray();
    }

    double DetermineLeft(HashSet<double> existingLefts, double width)
    {
        double left = 0;

        while (existingLefts.Contains(left))
        {
            left += width;
        }

        return left;
    }

    HashSet<double> ExistingLefts(IDictionary<AppointmentData, double> lefts, IEnumerable<AppointmentData> appointments)
    {
        var existingLefts = new HashSet<double>();

        foreach (var appointment in appointments)
        {
            if (lefts.TryGetValue(appointment, out var existingLeft))
            {
                existingLefts.Add(existingLeft);
            }
        }

        return existingLefts;
    }
    private IDictionary<int, int> AppointmentGroups()
    {
        var groups = new Dictionary<int, int>();

        for (var index = 0; index < Appointments.Count(); index++)
        {
            groups[index] = 0;
        }

        for (var date = StartDate; date < EndDate; date = date.AddMinutes(30))
        {
            var start = date;
            var end = start.AddMinutes(30);

            var appointments = AppointmentsInSlot(start, end);

            foreach (var item in appointments)
            {
                var index = Appointments.IndexOf(item);

                var count = groups[index];

                groups[index] = Math.Max(appointments.Length, count);
            }
        }

        return groups;
    }


#line default
#line hidden
    }
}
#pragma warning restore 1591
