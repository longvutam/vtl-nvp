// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Radzen.Blazor
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "C:\Users\owlsn\Source\Repos\vtl-nvp\Radzen.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#line 1 "C:\Users\owlsn\Source\Repos\vtl-nvp\Radzen.Blazor\RadzenRadialGauge.razor"
using Radzen.Blazor;

#line default
#line hidden
#line 2 "C:\Users\owlsn\Source\Repos\vtl-nvp\Radzen.Blazor\RadzenRadialGauge.razor"
using Radzen.Blazor.Rendering;

#line default
#line hidden
    public partial class RadzenRadialGauge : GaugeBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 41 "C:\Users\owlsn\Source\Repos\vtl-nvp\Radzen.Blazor\RadzenRadialGauge.razor"
       
    IList<RadzenRadialGaugeScalePointer> Pointers { get; set; } = new List<RadzenRadialGaugeScalePointer>();

    string PointerStyle(RadzenRadialGaugeScalePointer pointer)
    {
        return $"left: {pointer.Scale.CurrentCenter.X.ToInvariantString()}px; top: {pointer.Scale.CurrentCenter.Y.ToInvariantString()}px";
    }

    internal void AddPointer(RadzenRadialGaugeScalePointer pointer)
    {
        if (!Pointers.Contains(pointer))
        {
            Pointers.Add(pointer);

            StateHasChanged();
        }
    }

    protected override string GetComponentCssClass()
    {
        return $"rz-gauge";
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
