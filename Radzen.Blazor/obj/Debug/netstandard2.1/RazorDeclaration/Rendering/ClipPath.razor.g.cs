// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Radzen.Blazor.Rendering
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "D:\c#\radzen-blazor\Radzen.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
    public partial class ClipPath : RadzenChartComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 7 "D:\c#\radzen-blazor\Radzen.Blazor\Rendering\ClipPath.razor"
       
    string Path { get; set; }

    protected override void Initialize()
    {
        var categoryTicks = Chart.CategoryScale.Ticks(Chart.CategoryAxis.TickDistance);
        var valueTicks = Chart.ValueScale.Ticks(Chart.ValueAxis.TickDistance);

        var x1 = Chart.CategoryScale.Scale(categoryTicks.Start).ToInvariantString();
        var x2 = Chart.CategoryScale.Scale(categoryTicks.End).ToInvariantString();

        var y1 = Chart.ValueScale.Scale(valueTicks.Start).ToInvariantString();
        var y2 = Chart.ValueScale.Scale(valueTicks.End).ToInvariantString();

        Path = $"M {x1} {y1} L {x2} {y1} L {x2} {y2} L {x1} {y2}";
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
